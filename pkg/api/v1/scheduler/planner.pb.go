// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1/scheduler/planner.proto

package scheduler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Day           int64                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetDay() int64 {
	if x != nil {
		return x.Day
	}
	return 0
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*Event               `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type UpsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *Event                 `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{3}
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_v1_scheduler_planner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_planner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_planner_proto_rawDescGZIP(), []int{5}
}

var File_v1_scheduler_planner_proto protoreflect.FileDescriptor

const file_v1_scheduler_planner_proto_rawDesc = "" +
	"\n" +
	"\x1av1/scheduler/planner.proto\x12\fv1.scheduler\x1a\x18v1/scheduler/event.proto\"\x1e\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x03R\x03day\":\n" +
	"\vGetResponse\x12+\n" +
	"\x06events\x18\x01 \x03(\v2\x13.v1.scheduler.EventR\x06events\":\n" +
	"\rUpsertRequest\x12)\n" +
	"\x05event\x18\x01 \x01(\v2\x13.v1.scheduler.EventR\x05event\"\x10\n" +
	"\x0eUpsertResponse\"\x1f\n" +
	"\rDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x10\n" +
	"\x0eDeleteResponse2\xdc\x01\n" +
	"\x0ePlannerService\x12<\n" +
	"\x03Get\x12\x18.v1.scheduler.GetRequest\x1a\x19.v1.scheduler.GetResponse\"\x00\x12E\n" +
	"\x06Upsert\x12\x1b.v1.scheduler.UpsertRequest\x1a\x1c.v1.scheduler.UpsertResponse\"\x00\x12E\n" +
	"\x06Delete\x12\x1b.v1.scheduler.DeleteRequest\x1a\x1c.v1.scheduler.DeleteResponse\"\x00B.Z,github.com/megakuul/zen/pkg/api/v1/schedulerb\x06proto3"

var (
	file_v1_scheduler_planner_proto_rawDescOnce sync.Once
	file_v1_scheduler_planner_proto_rawDescData []byte
)

func file_v1_scheduler_planner_proto_rawDescGZIP() []byte {
	file_v1_scheduler_planner_proto_rawDescOnce.Do(func() {
		file_v1_scheduler_planner_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_scheduler_planner_proto_rawDesc), len(file_v1_scheduler_planner_proto_rawDesc)))
	})
	return file_v1_scheduler_planner_proto_rawDescData
}

var file_v1_scheduler_planner_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_scheduler_planner_proto_goTypes = []any{
	(*GetRequest)(nil),     // 0: v1.scheduler.GetRequest
	(*GetResponse)(nil),    // 1: v1.scheduler.GetResponse
	(*UpsertRequest)(nil),  // 2: v1.scheduler.UpsertRequest
	(*UpsertResponse)(nil), // 3: v1.scheduler.UpsertResponse
	(*DeleteRequest)(nil),  // 4: v1.scheduler.DeleteRequest
	(*DeleteResponse)(nil), // 5: v1.scheduler.DeleteResponse
	(*Event)(nil),          // 6: v1.scheduler.Event
}
var file_v1_scheduler_planner_proto_depIdxs = []int32{
	6, // 0: v1.scheduler.GetResponse.events:type_name -> v1.scheduler.Event
	6, // 1: v1.scheduler.UpsertRequest.event:type_name -> v1.scheduler.Event
	0, // 2: v1.scheduler.PlannerService.Get:input_type -> v1.scheduler.GetRequest
	2, // 3: v1.scheduler.PlannerService.Upsert:input_type -> v1.scheduler.UpsertRequest
	4, // 4: v1.scheduler.PlannerService.Delete:input_type -> v1.scheduler.DeleteRequest
	1, // 5: v1.scheduler.PlannerService.Get:output_type -> v1.scheduler.GetResponse
	3, // 6: v1.scheduler.PlannerService.Upsert:output_type -> v1.scheduler.UpsertResponse
	5, // 7: v1.scheduler.PlannerService.Delete:output_type -> v1.scheduler.DeleteResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_scheduler_planner_proto_init() }
func file_v1_scheduler_planner_proto_init() {
	if File_v1_scheduler_planner_proto != nil {
		return
	}
	file_v1_scheduler_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_scheduler_planner_proto_rawDesc), len(file_v1_scheduler_planner_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_scheduler_planner_proto_goTypes,
		DependencyIndexes: file_v1_scheduler_planner_proto_depIdxs,
		MessageInfos:      file_v1_scheduler_planner_proto_msgTypes,
	}.Build()
	File_v1_scheduler_planner_proto = out.File
	file_v1_scheduler_planner_proto_goTypes = nil
	file_v1_scheduler_planner_proto_depIdxs = nil
}
