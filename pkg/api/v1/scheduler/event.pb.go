// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1/scheduler/event.proto

package scheduler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_CHILL     EventType = 0
	EventType_PAUSE     EventType = 1
	EventType_MIN_FOCUS EventType = 2
	EventType_MAX_FOCUS EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "CHILL",
		1: "PAUSE",
		2: "MIN_FOCUS",
		3: "MAX_FOCUS",
	}
	EventType_value = map[string]int32{
		"CHILL":     0,
		"PAUSE":     1,
		"MIN_FOCUS": 2,
		"MAX_FOCUS": 3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_scheduler_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_v1_scheduler_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_v1_scheduler_event_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type           EventType              `protobuf:"varint,2,opt,name=type,proto3,enum=v1.scheduler.EventType" json:"type,omitempty"`
	Name           string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartTime      int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	StopTime       int64                  `protobuf:"varint,5,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	TimerStartTime int64                  `protobuf:"varint,6,opt,name=timer_start_time,json=timerStartTime,proto3" json:"timer_start_time,omitempty"`
	TimerStopTime  int64                  `protobuf:"varint,7,opt,name=timer_stop_time,json=timerStopTime,proto3" json:"timer_stop_time,omitempty"`
	RatingChange   float64                `protobuf:"fixed64,8,opt,name=rating_change,json=ratingChange,proto3" json:"rating_change,omitempty"`
	Description    string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	MusicUrl       string                 `protobuf:"bytes,10,opt,name=music_url,json=musicUrl,proto3" json:"music_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_v1_scheduler_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_CHILL
}

func (x *Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Event) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Event) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *Event) GetTimerStartTime() int64 {
	if x != nil {
		return x.TimerStartTime
	}
	return 0
}

func (x *Event) GetTimerStopTime() int64 {
	if x != nil {
		return x.TimerStopTime
	}
	return 0
}

func (x *Event) GetRatingChange() float64 {
	if x != nil {
		return x.RatingChange
	}
	return 0
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetMusicUrl() string {
	if x != nil {
		return x.MusicUrl
	}
	return ""
}

var File_v1_scheduler_event_proto protoreflect.FileDescriptor

const file_v1_scheduler_event_proto_rawDesc = "" +
	"\n" +
	"\x18v1/scheduler/event.proto\x12\fv1.scheduler\"\xca\x02\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12+\n" +
	"\x04type\x18\x02 \x01(\x0e2\x17.v1.scheduler.EventTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x1b\n" +
	"\tstop_time\x18\x05 \x01(\x03R\bstopTime\x12(\n" +
	"\x10timer_start_time\x18\x06 \x01(\x03R\x0etimerStartTime\x12&\n" +
	"\x0ftimer_stop_time\x18\a \x01(\x03R\rtimerStopTime\x12#\n" +
	"\rrating_change\x18\b \x01(\x01R\fratingChange\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\x12\x1b\n" +
	"\tmusic_url\x18\n" +
	" \x01(\tR\bmusicUrl*?\n" +
	"\tEventType\x12\t\n" +
	"\x05CHILL\x10\x00\x12\t\n" +
	"\x05PAUSE\x10\x01\x12\r\n" +
	"\tMIN_FOCUS\x10\x02\x12\r\n" +
	"\tMAX_FOCUS\x10\x03B.Z,github.com/megakuul/zen/pkg/api/v1/schedulerb\x06proto3"

var (
	file_v1_scheduler_event_proto_rawDescOnce sync.Once
	file_v1_scheduler_event_proto_rawDescData []byte
)

func file_v1_scheduler_event_proto_rawDescGZIP() []byte {
	file_v1_scheduler_event_proto_rawDescOnce.Do(func() {
		file_v1_scheduler_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_scheduler_event_proto_rawDesc), len(file_v1_scheduler_event_proto_rawDesc)))
	})
	return file_v1_scheduler_event_proto_rawDescData
}

var file_v1_scheduler_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_scheduler_event_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v1_scheduler_event_proto_goTypes = []any{
	(EventType)(0), // 0: v1.scheduler.EventType
	(*Event)(nil),  // 1: v1.scheduler.Event
}
var file_v1_scheduler_event_proto_depIdxs = []int32{
	0, // 0: v1.scheduler.Event.type:type_name -> v1.scheduler.EventType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_v1_scheduler_event_proto_init() }
func file_v1_scheduler_event_proto_init() {
	if File_v1_scheduler_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_scheduler_event_proto_rawDesc), len(file_v1_scheduler_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_scheduler_event_proto_goTypes,
		DependencyIndexes: file_v1_scheduler_event_proto_depIdxs,
		EnumInfos:         file_v1_scheduler_event_proto_enumTypes,
		MessageInfos:      file_v1_scheduler_event_proto_msgTypes,
	}.Build()
	File_v1_scheduler_event_proto = out.File
	file_v1_scheduler_event_proto_goTypes = nil
	file_v1_scheduler_event_proto_depIdxs = nil
}
