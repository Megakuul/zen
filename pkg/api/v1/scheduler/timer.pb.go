// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1/scheduler/timer.proto

package scheduler

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     int64                  `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_v1_scheduler_timer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_timer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_timer_proto_rawDescGZIP(), []int{0}
}

func (x *StartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_v1_scheduler_timer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_timer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_timer_proto_rawDescGZIP(), []int{1}
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StopTime      int64                  `protobuf:"varint,2,opt,name=stop_time,json=stopTime,proto3" json:"stop_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_v1_scheduler_timer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_timer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_timer_proto_rawDescGZIP(), []int{2}
}

func (x *StopRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_v1_scheduler_timer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_scheduler_timer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_v1_scheduler_timer_proto_rawDescGZIP(), []int{3}
}

var File_v1_scheduler_timer_proto protoreflect.FileDescriptor

const file_v1_scheduler_timer_proto_rawDesc = "" +
	"\n" +
	"\x18v1/scheduler/timer.proto\x12\fv1.scheduler\x1a\x18v1/scheduler/event.proto\"=\n" +
	"\fStartRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x03R\tstartTime\"\x0f\n" +
	"\rStartResponse\":\n" +
	"\vStopRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tstop_time\x18\x02 \x01(\x03R\bstopTime\"\x0e\n" +
	"\fStopResponse2\x93\x01\n" +
	"\fTimerService\x12B\n" +
	"\x05Start\x12\x1a.v1.scheduler.StartRequest\x1a\x1b.v1.scheduler.StartResponse\"\x00\x12?\n" +
	"\x04Stop\x12\x19.v1.scheduler.StopRequest\x1a\x1a.v1.scheduler.StopResponse\"\x00B.Z,github.com/megakuul/zen/pkg/api/v1/schedulerb\x06proto3"

var (
	file_v1_scheduler_timer_proto_rawDescOnce sync.Once
	file_v1_scheduler_timer_proto_rawDescData []byte
)

func file_v1_scheduler_timer_proto_rawDescGZIP() []byte {
	file_v1_scheduler_timer_proto_rawDescOnce.Do(func() {
		file_v1_scheduler_timer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_scheduler_timer_proto_rawDesc), len(file_v1_scheduler_timer_proto_rawDesc)))
	})
	return file_v1_scheduler_timer_proto_rawDescData
}

var file_v1_scheduler_timer_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_scheduler_timer_proto_goTypes = []any{
	(*StartRequest)(nil),  // 0: v1.scheduler.StartRequest
	(*StartResponse)(nil), // 1: v1.scheduler.StartResponse
	(*StopRequest)(nil),   // 2: v1.scheduler.StopRequest
	(*StopResponse)(nil),  // 3: v1.scheduler.StopResponse
}
var file_v1_scheduler_timer_proto_depIdxs = []int32{
	0, // 0: v1.scheduler.TimerService.Start:input_type -> v1.scheduler.StartRequest
	2, // 1: v1.scheduler.TimerService.Stop:input_type -> v1.scheduler.StopRequest
	1, // 2: v1.scheduler.TimerService.Start:output_type -> v1.scheduler.StartResponse
	3, // 3: v1.scheduler.TimerService.Stop:output_type -> v1.scheduler.StopResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_scheduler_timer_proto_init() }
func file_v1_scheduler_timer_proto_init() {
	if File_v1_scheduler_timer_proto != nil {
		return
	}
	file_v1_scheduler_event_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_scheduler_timer_proto_rawDesc), len(file_v1_scheduler_timer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_scheduler_timer_proto_goTypes,
		DependencyIndexes: file_v1_scheduler_timer_proto_depIdxs,
		MessageInfos:      file_v1_scheduler_timer_proto_msgTypes,
	}.Build()
	File_v1_scheduler_timer_proto = out.File
	file_v1_scheduler_timer_proto_goTypes = nil
	file_v1_scheduler_timer_proto_depIdxs = nil
}
